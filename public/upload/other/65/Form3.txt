using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;
using System.Windows.Forms.DataVisualization.Charting;
using WindowsFormsApp1.Properties;

namespace WindowsFormsApp1
{
    public partial class Form3 : Form
    {
        public Form3()
        {
            InitializeComponent();

            var conn = DBWalker.GetConnection(Resources.Server, Resources.User, Resources.Password, Resources.secure);
            conn.Open();
            var sql = "select idfk from [MFU].[dbo].[Table_Form_Mould] group by [IdFK] order BY [IdFk] ";
            var command = new SqlCommand(sql, conn);
            var reader = command.ExecuteReader();
            while (reader.Read())
            {
                comboBox1.Items.Add(reader["IdFk"].ToString());
            }

            reader.Close();
            conn.Close();
        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            var sqlConnection = DBWalker.GetConnection(Resources.Server, Resources.User, Resources.Password, Resources.secure);
            try
            {
                sqlConnection.Open();

                SqlDataAdapter dataAdapter = new SqlDataAdapter(
                   "" +
                    $" DECLARE @i int " +
                    $" DECLARE @cnt int" +
                    $" DECLARE @avg2 float" +
                    $" DECLARE @avg float" +
                    $" DECLARE @form float" +

                    $" if OBJECT_ID('tempdb..##ResAVG') IS NOT NULL" +
                        $" BEGIN" +
                            $" drop table ##ResAVG" +
                        $" END" +
                    $" CREATE TABLE ##ResAVG(Form INT, Agr float, Agr2 float)" +

                    $" DECLARE c CURSOR FOR" +
                                        $" SELECT" +
                                            $" [MFU].[dbo].[Volume_mess].Number_mould" +
                                        $" FROM" +
                                            $" [MFU].[dbo].[Volume_mess]" +
                                        $" WHERE" +
                                            $" [MFU].[dbo].[Volume_mess].Number_fk = @idFK" +
                                        $" UNION SELECT" +
                                            $" [OTK].[dbo].[Weight_Control_2].Num_form" +
                                        $" FROM" +
                                            $" [OTK].[dbo].[Weight_Control_2]" +
                                        $" WHERE" +
                                            $" [OTK].[dbo].[Weight_Control_2].Num_f = @idFK" +
                                        $" UNION SELECT" +
                                            $" [OTK].[dbo].[Weight_Control_3].Num_form" +
                                        $" FROM" +
                                            $" [OTK].[dbo].[Weight_Control_3]" +
                                        $" WHERE" +
                                            $" [OTK].[dbo].[Weight_Control_3].Num_f = @idFK" +
                                        $" ORDER BY" +
                                            $" Number_mould" +
                    $" OPEN c" +
                    $" FETCH NEXT FROM c INTO @form" +

                    $" while @@FETCH_STATUS = 0" +
                        $" BEGIN" +

                            $" SELECT top(1)" +
                               $" @avg = cast(REPLACE(Volume, ',', '.') as float)" +
                            $" FROM [MFU].[dbo].[Volume_mess]" +
                            $" WHERE Number_mould = @form AND Number_fk = @idFk AND Side = N'Черновая'" +
                            $" ORDER BY date DESC" +

                            $" SELECT  TOP(1)" +
                            $" @avg2 = cast(REPLACE(Weight_b, ',', '.') as float)" +
                            $" FROM" +
                            $" ( SELECT" +
                                    $" Date, Weight_b" +
                                $" FROM" +
                                    $" [OTK].[dbo].[Weight_Control_2]" +
                                $" WHERE" +
                                    $" Num_f = @idFk and Num_form = @form" +
                                $" UNION SELECT" +
                                    $" Date, Weight_b" +
                                $" FROM" +
                                    $" [OTK].[dbo].[Weight_Control_3]" +
                                $" WHERE" +
                                    $" Num_f = @idFk and Num_form = @form" +
                                $" ) b" +
                                $" ORDER BY Date DESC" +

                   $" INSERT INTO ##ResAVG VALUES (@form, @avg, @avg2)" +
                            $" FETCH NEXT FROM c INTO @form" +
                        $" END" +
                    $" CLOSE c" +
                    $" DEALLOCATE c" +
                    $" SELECT* FROM ##ResAVG ORDER BY Agr DESC", sqlConnection);


                dataAdapter.SelectCommand.Parameters.AddWithValue("@idFK", comboBox1.SelectedItem);

                var db = new DataSet();

                if (dataAdapter.Fill(db) != 0)
                {
                    double minVol = 0, minW = 0;
                    // Передаем данные в график 
                    try
                    {
                        minVol = Convert.ToDouble(db.Tables[0].Compute("min([Agr])", string.Empty)) - 1;
                    }
                    catch (Exception exception)
                    {
                        MessageBox.Show(@"Для выбранного формокомплекта нет данных по объему", @"Отсутствуют данные",
                            MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    }

                    try
                    {
                        minW = Convert.ToDouble(db.Tables[0].Compute("min([Agr2])", string.Empty)) - 1;

                    }
                    catch (Exception exception)
                    {
                        MessageBox.Show(@"Для выбранного формокомплекта нет данных по весу", @"Отсутствуют данные",
                            MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    }

                    var table = db.Tables[0].AsEnumerable();
                    foreach (var el in table)
                    {
                        if (el[1] != DBNull.Value)
                            el[1] = Math.Round(Convert.ToDouble(el[1])-minVol, 2);

                        if (el[2] != DBNull.Value)
                            el[2] = Math.Round(Convert.ToDouble(el[2]) - minW, 1);
                    }

                    db.Tables[0].AcceptChanges();
                    chart2.DataSource = db.Tables[0];
                    chart2.Series[0].XValueMember = "Form" ;

                    chart2.Series[0].YValueMembers = "Agr";
                    // Настройка внешнего вида графика 
                    //chart2.Series[0].IsValueShownAsLabel = true;
                    chart2.ChartAreas[0].AxisX.Interval = 1;
                    chart2.Series[0].IsXValueIndexed = true;

                    SqlCommand command = new SqlCommand(
                        "Select Set_min, Set_max FROM [MFU].[dbo].[Volume_ex] where N_fk = @idFk ORDER BY Data_set DESC",
                        sqlConnection);
                    command.Parameters.AddWithValue("@idFK", comboBox1.SelectedItem);
                    var linesTrend = command.ExecuteReader();
                    chart2.ChartAreas[0].AxisY.StripLines.Clear();
                    if (linesTrend.HasRows)
                    {
                        linesTrend.Read();
                        StripLine line1 = new StripLine();
                        StripLine line2 = new StripLine();
                        line1.Interval = 0;
                        line2.Interval = 0;
                        line1.BackColor = Color.Red;
                        line2.BackColor = Color.Blue;
                        line1.StripWidth = 0.1;
                        line2.StripWidth = 0.1;
                        line1.IntervalOffset = Convert.ToDouble(linesTrend["Set_min"]) - minVol;
                        line2.IntervalOffset = Convert.ToDouble(linesTrend["Set_max"]) - minVol;
                        chart2.ChartAreas[0].AxisY.StripLines.Add(line1);
                        chart2.ChartAreas[0].AxisY.StripLines.Add(line2);
                    }
                    else
                    {
                        MessageBox.Show(@"Для выбранного формокомплекта нет средних значений по объему", @"Отсутствуют данные",
                            MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    }
                    chart2.DataBind();

                    double avrage = (double) db.Tables[0].Compute("AVG([Agr2])", "");
                    chart1.ChartAreas[0].AxisY.StripLines.Clear();
                    StripLine line3 = new StripLine();
                    StripLine line4 = new StripLine();
                    line3.Interval = 0;
                    line4.Interval = 0;
                    line3.BackColor = Color.Red;
                    line4.BackColor = Color.Blue;
                    line3.StripWidth = 0.1;
                    line4.StripWidth = 0.1;
                    line3.IntervalOffset = avrage - 1;
                    line4.IntervalOffset = avrage + 1;
                    chart1.ChartAreas[0].AxisY.StripLines.Add(line3);
                    chart1.ChartAreas[0].AxisY.StripLines.Add(line4);
                    

                   // Передаем данные в график 
                    chart1.DataSource = db.Tables[0];
                    chart1.Series[0].XValueMember = "Form";
                    chart1.Series[0].YValueMembers = "Agr2";
                    // Настройка внешнего вида графика 
                   // chart1.Series[0].IsValueShownAsLabel = true;
                    chart1.ChartAreas[0].AxisX.Interval = 1;
                    chart1.Series[0].IsXValueIndexed = true;
                    chart1.DataBind();
                }
                else
                {
                    MessageBox.Show(@"Для выбранного формокомплекта нет данных", @"Отсутствуют данные",
                        MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }

            }

            catch (Exception ex)
            {
                MessageBox.Show(@"Ошибка построения графика. Описание ошибки: " + ex.Message);
            }
            finally
            {
                sqlConnection.Close();
            }
        }
    }
}